name: Generate, Test and Publish Pages

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Generate and organize site pages
        run: |
          python script/launch_all.py
          mkdir -p wwwroot
          mv ./view/* ./wwwroot/
          find . -type f \( -name "*.png" -o -name "*.webp" \) -exec rsync -R {} ./wwwroot/ \;
          
          if [ "$(ls -A ./wwwroot)" ]; then
            echo "wwwroot is populated."
          else
            echo "Error: wwwroot is empty after generation."
            exit 1
          fi

      - name: Debug deployment contents
        run: ls -l wwwroot

          
      - name: Install tidy
        run: |
          sudo apt-get update
          sudo apt-get install -y tidy
    
      - name: Validate HTML with tidy
        run: |
          tidy -q wwwroot/*.html > tidy_output.txt 2>&1 || true
          
          if grep -q "Error:" tidy_output.txt; then
            echo "HTML validation found errors"
            cat tidy_output.txt
            exit 1
          else
            echo "No HTML errors found."
          fi
      
      - name: Install curl
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
      
      - name: Start local server for smoke tests
        run: |
          python -m http.server --directory wwwroot 8080 &
          sleep 2  
      
      - name: Smoke Test - Check homepage accessibility
        run: |       
          curl -I http://127.0.0.1:8080/index.html | grep "200 OK" || exit 1
      
      
      - name: Run pytest install
        run: python -m pip install pytest

      - name : run ls
        run: ls -l       

      - name: Run tests
        run: pytest ./test/ --maxfail=1 --disable-warnings -v


      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: wwwroot
